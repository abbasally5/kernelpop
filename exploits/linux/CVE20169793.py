"""
http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-9793
"""
import os
from exploits.exploit import LinuxExploit
from src.kernels import KernelWindow
from constants import color_print, HIGH_RELIABILITY, CONFIRMED_VULNERABLE, UBUNTU_14, UBUNTU_16, UBUNTU_17, CENTOS, \
	DEBIAN_9, DEBIAN_10, ARCHITECTURE_x86_64, LINUX_EXPLOIT_SOURCE_PATH, PLAYGROUND_PATH

class CVE20169793(LinuxExploit):
	def __init__(self):
		super().__init__()
		self.name = "CVE20169793"
		self.formatted_name = "CVE-2016-9793"
		self.type = "linux"
		self.brief_desc = "signed overflows for SO_{SND|RCV}BUFFORCE"
		self.reliability = HIGH_RELIABILITY
		self.architecture = ARCHITECTURE_x86_64
		self.vulnerable_kernels = [
			KernelWindow(UBUNTU_14, CONFIRMED_VULNERABLE, 3, 11, 0, 4, 8, 0),
			KernelWindow(UBUNTU_16, CONFIRMED_VULNERABLE, 3, 11, 0, 4, 8, 0),
			KernelWindow(UBUNTU_17, CONFIRMED_VULNERABLE, 3, 11, 0, 4, 8, 0),
			KernelWindow(DEBIAN_9, CONFIRMED_VULNERABLE, 3, 11, 0, 4, 8, 0),
			KernelWindow(DEBIAN_10, CONFIRMED_VULNERABLE, 3, 11, 0, 4, 8, 0),
			KernelWindow(CENTOS, CONFIRMED_VULNERABLE, 3, 11, 0, 4, 8, 0)
		]
		self.source_c_path = os.path.join(LINUX_EXPLOIT_SOURCE_PATH, "{}.c".format(self.name))
		self.compilation_path = os.path.join(PLAYGROUND_PATH, self.name)
		self.compilation_command = "gcc -pthread -o {} {} && sudo setcap cap_net_admin+ep {}".format(self.compilation_path, self.source_c_path, self.compilation_path)
		self.exploit_command = self.compilation_path

	def determine_vulnerability(self):
		"""
		:return: True if vulnerable, False if not
		"""
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[+] system appears to be vulnerable to {}".format(self.name), color="green")
		return True
