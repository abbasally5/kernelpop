"""
https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt
https://www.exploit-db.com/exploits/42272/
"""
import os
from exploits.exploit import LinuxExploit
from src.kernels import KernelWindow
from constants import NETBSD, PLAYGROUND_PATH, LINUX_EXPLOIT_SOURCE_PATH, HIGH_RELIABILITY, color_print, CONFIRMED_VULNERABLE

class CVE20171000375(LinuxExploit):
	def __init__(self):
		super().__init__()
		self.name = "CVE20171000375"
		self.formatted_name = "CVE-2017-1000375"
		self.type = "linux"
		self.brief_desc = "Stack clash vulnerability from qualys"
		self.reliability = HIGH_RELIABILITY
		self.vulnerable_kernels = [
			KernelWindow(NETBSD, CONFIRMED_VULNERABLE, 4, 0, 0, 7, 1, 0)
		]
		self.source_c_path = os.path.join(LINUX_EXPLOIT_SOURCE_PATH, "{}.c".format(self.name))
		self.compilation_path = os.path.join(PLAYGROUND_PATH, self.name)
		self.compilation_command = "gcc -o {} {}".format(self.compilation_path, self.source_c_path)
		self.exploit_command = "{0} {1}".format(self.compilation_path, "0x04000000")

	def determine_vulnerability(self):
		"""
		:return: True if vulnerable, False if not
		"""
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[+] system appears to be vulnerable to {}".format(self.name), color="green")
		return True
