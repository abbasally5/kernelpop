"""
https://www.exploit-db.com/exploits/43199/
"""
import os
from exploits.exploit import LinuxExploit
from src.kernels import KernelWindow
from constants import color_print, UBUNTU_17, UBUNTU_16, UBUNTU_14, DEBIAN_10, DEBIAN_9, DEBIAN_8, DEBIAN_7, \
	CONFIRMED_VULNERABLE, HIGH_RELIABILITY, ARCHITECTURE_amd64, PLAYGROUND_PATH, LINUX_EXPLOIT_SOURCE_PATH

class CVE20171000379(LinuxExploit):
	def __init__(self):
		super().__init__()
		self.name = "CVE20171000405"
		self.formatted_name = "CVE-2017-1000405"
		self.type = "linux"
		self.brief_desc = "Huge Dirty Cow"
		self.reliability = HIGH_RELIABILITY
		self.vulnerable_kernels = [
			KernelWindow(DEBIAN_7, CONFIRMED_VULNERABLE, 2, 6, 38, 4, 14, 0),
			KernelWindow(DEBIAN_8, CONFIRMED_VULNERABLE, 2, 6, 38, 4, 14, 0),
			KernelWindow(DEBIAN_9, CONFIRMED_VULNERABLE, 2, 6, 38, 4, 14, 0),
			KernelWindow(DEBIAN_10, CONFIRMED_VULNERABLE, 2, 6, 38, 4, 14, 0),
			KernelWindow(UBUNTU_14, CONFIRMED_VULNERABLE, 2, 6, 38, 4, 14, 0),
			KernelWindow(UBUNTU_16, CONFIRMED_VULNERABLE, 2, 6, 38, 4, 14, 0),
			KernelWindow(UBUNTU_17, CONFIRMED_VULNERABLE, 2, 6, 38, 4, 14, 0),
		]
		self.architecture = ARCHITECTURE_amd64
		self.source_c_path = os.path.join(LINUX_EXPLOIT_SOURCE_PATH, "{}.c".format(self.name))
		self.compilation_path = os.path.join(PLAYGROUND_PATH, self.name)
		self.compilation_command = "gcc -o {} {}".format(self.compilation_path, self.source_c_path)
		self.exploit_command = self.compilation_path

	def determine_vulnerability(self):
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[+] system appears to be vulnerable to {}".format(self.name), color="green")
		return True

	def exploit(self):
		self.exploit_failure("this requires manual exploitation. review source at {}".format(self.source_c_path))
